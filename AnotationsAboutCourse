len(tel) - Return the size of my dictionary (in this case)
del(tel["chave"]) - Deletes an item that are in my dictionary
tel.keys() - Show for me which are the keys of my dictionary
tel.values() - Returns only values within my dictionary.

tel.popitem() - Mostra uma "chave" e um "valor" e em seguida já o deleta

36458899 in tel - Checa se este número está contigo dentro do dicionário
tel.update(tel2) - Faz a mesclagem de dois dicionários

====================================================================================================================
            FUNÇÃO

A diferença entre função e método é que a função retorna algum valor, enquannto um método pode não retornar nada

Parâmetros de função: é uma variável declarada entre os parêntesis de uma função

====================================================================================================================
            PARÂMETROS DEFAULT

São parâmetros que recebem o valor na implementação da função, ou seja, os parâmetros estão dentro dos
parêntesis

É um parâmetro inicializado com valor default ... Nós definimos um valor default no momento da declaração

* Valor default entende que se no meio da função não forem atribuídos novos valores a
ela ... *

====================================================================================================================
            ARGUMENTOS

Posicionais: Nome utilizado para passagem de valores, onde cada valor estará de acordo
com a ordem passados no cabeçalho da função.

Nomeados: É a passagem de valores fazendo associação com o nome do parâmetro e o valor
que está sendo enviado.
* Posso fazer a associação através de chave e valor. e assim, não precisam estar em ordem.

Podemos comparar a passagem de um parâmetro da função com uma tupla, pois é imultável...
e deve-se seguir a mesma ordem se for passar os argumentos quando invocar a função.

====================================================================================================================
            RETORNO DE VALORES

É o processamento de alguma informação e o retorno do dado processado!
Desta forma, temos que todas as funções ao capazes de retornar valores ... Então uma função
pode ser invocada, pode receber argumentos e pode retornar valores

* Para retornar uma valor utilizamos a palavra reservada RETURN

> Temos que a palavra RETURN é usada para declarar qual informação deverá ser retornada.
> A mesma funciona também para indicar o fim de um bloco de execução da função, retornando
assim o valor que estiver à sua frente.

====================================================================================================================
            FUNÇÃO VARIÁDICA

É toda função capaz de receber quantidades variáveis de parâmetros, ou seja, funções que pode receber 0 ou então N
parâmetros.
O python nos proporciona um envio de quantidades variáveis de parâmetros posicionais ou nomeados, ou então posicionais
e nomeados simultâneamente

>> Importante lembrar que parâmetro nomeado é quando enviamos os valores associados ao parâmetros, ou seja, nós enviamos
na forma de dicionário
>> Os parâmetros posicionais é quando na invocação da função passamos os argumentos conforme foi definido na declaração
da função.

* Todos os parâmetros precedido por 1 asterisco na definição será capaz de receber uma lista de argumentos posicionais,
ou seja, essa é a sintaxe para passarmos uma lista de valores >>> def func(*args) <<<... da mesma forma, todos os
parâmetros precedidos por 2 asteriscos >>> (**kwargs) <<< poderá receber um conjunto de argumentos nomeados, "argumentos
 nomeados é quando associamos o nome do argumento com o valor", logo, nós temos que esse tipo de envio irá resultar numa
 estrutura do tipo dicionário.

====================================================================================================================
            DESEMPACOTAMENTO I

Empacotar é adicionar um conjunto de valores à uma lista.
Dizer que há valores empacotados, significar dizer que temos uma estrutura do tipo lista, tupla ou dicionário que contém
alguns valores.

Desempacotamento é a extração dos elementos contidos (agrupados ou empacotados) numa estrutura.

Todas as vezes que nós tivermos uma lista que contenham os valores que devem ser passados como argumento de uma função,
nós podemos utilizar o desempacotamento ao invés de dizer explicitamente que o primeiro elemento deve ser associado ao
primeiro argumento, o segundo elemento com o segundo argumento e assim por diante

====================================================================================================================
            FUNÇÕES ANINHADAS

Aninhamento de função é a declaração de função no corpo de outra função.
Uma função pode desempenhar uma tarefa específica dentro de outra função

sintaxe segundo Akio: 

>>> if __name__ == '__main__:
    # Invocação da função

====================================================================================================================
            INSTRUÇÃO NONLOCAL

É a instrução que permite acessar membros não globais e não locais, membros contidos
no escopo externo.

Instrução Nonlocal será sempre utilizada quando estivermos trabalhando com funções
aninhadas.

====================================================================================================================
            MÓDULOS

Módulos são unidades de organização de programas de níveis mais altos.
São arquivos que contém código Python com extenção *.py
Os módulos disponibilizam um conjunto de ferramentas, como por exemplo, variáveis ... funções ou classes .. para
resolução de problemas específicos ao compartilhar suas estruturas e permitir a fácil reutilização de códigos

IMPORTANTE: Um pacote é um conjunto de módulos e um módulo é um arquivo Python isoladamente que pode ou não ter um
conjunto de variáveis, funções, classes etc ... implementado dentro do mesmo.

Um conjunto de módulos podem dar origem à um pacote, podemos empacotar várias estruturas dentro de módulos diferentes.

CARACTERÍSTICAS: Maneira fácil de organizar componentes no sistema e também acabam servindo como pacotes e nomes,
partindo de uma perspectiva abstrata

Funções elementares:

>>> Reutilização de um mesmo código
>>> Namespace
>>> Compartilhamento de estrutura de dados

Uma biblioteca padrão é o conjunto de módulos contidos na distribuição oficial

BUILTINS: é o nome do módulo que disponibiliza os principais tipos, funções e variáveis da linguagem.

====================================================================================================================
            BLOCOS SEM CÓDIGO ( vazios )

A instrução "PASS", do inglês, significa passar, atravessar, avançar
É usado quando temos uma função por exemplos mas no momento ainda não vamos declarar nada a ela, então usamos o pass
para fazer com que nossa aplicação não tenha um problema de Sintaxe ao passar por aquele trecho de nosso código

====================================================================================================================
            ESCOPO GLOBAL

   É o escopo dos módulos

É a visibilidade que cada membro possui dentro de um determinado código. O escopo é uma das maiores inovações das
linguagens modernas, permitindo a utilização de nomes iguais em partes diferentes de um mesmo código.

Quando uma variável é definida de modo global, ou seja, no módulo, ela fica disponível à todos dentro daquele
módulo, e para ser alterada dentro de uma função, é necessário usar a instrução 'GLOBAL' e o nome da variável.
